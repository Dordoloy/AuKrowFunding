easy_admin:
  site_name: 'AuKrowFunding'
  entities:
    # List the entity class name you want to manage
    Category:
      class: App\Entity\Category
      label: 'Category'
      list:
        fields: ['name', 'parent', 'categories']
        title: "Most recent Categories added"
        sort: ['id', 'DESC']
      new:
        fields:
          - { property: 'name', type: 'text', type_option: { required: true} }
          - { property: 'parent', type: 'easyadmin_autocomplete', type_options: { class: 'App\Entity\Category' } }
          - { property: 'categories', label: 'Children', type_options: { multiple: true } }
    Donation:
      class: App\Entity\Donation
      label: 'Donation'
      list:
        fields: ['amount', 'user', 'ProjectParent']
        title: "The last donation"
        sort: ['id', 'DESC']
      new:
        fields:
          - { property: 'amount', type: 'money', type_option: { required: true} }
          - { property: 'dateTime', type: 'datetime', type_option: { required: true} }
          - { property: 'user', type: 'easyadmin_autocomplete', type_options: { class: 'App\Entity\User' } }
          - { property: 'projectParent', label: 'Project target', type: 'easyadmin_autocomplete', type_options: { class: 'App\Entity\Project' } }
    Project:
      class: App\Entity\Project
      label: 'Project'
      list:
        fields: ['title', 'goal', 'limitDate', 'report', 'up', 'down']
        title: "Newest project"
        sort: ['id', 'DESC']
      new:
        fields:
          - { property: 'goal', type: 'money', type_option: { required: true} }
          - { property: 'limitDate', type: 'datetime', type_option: { required: true} }
          - { property: 'report', type: 'number', type_option: { required: true} }
          - { property: 'description', type: 'text_editor', type_option: { required: true} }
          - { property: 'miniature', type: 'text' }
          - { property: 'title', type: 'text', type_option: { required: true} }
          - { property: 'user', label: 'Owner', type: 'easyadmin_autocomplete', type_option: { class: 'App\Entity\User' } }
          - { property: 'tags', type: 'easyadmin_autocomplete', type_option: { class: 'App\Entity\Tag', multiple: true } }
          - { property: 'statu', label: 'Status', type: 'easyadmin_autocomplete', type_option: { class: 'App\Entity\Status' } }
          - { property: 'categories', type: 'easyadmin_autocomplete', type_option: { class: 'App\Entity\Category', multiple: true } }
    Status:
      class: App\Entity\Status
      label: 'Status'
      list:
        fields: ['name']
        title: "All status"
        sort: ['id', 'DESC']
      new:
        fields:
          - { property: 'name', type: 'text', type_option: { required: true} }
    Tag:
      class: App\Entity\Tag
      label: 'Tag'
      list:
        fields: ['name']
        title: "All tags"
        sort: ['id', 'DESC']
      new:
        fields:
          - { property: 'name', type: 'text', type_option: { required: true} }
    User:
      class: App\Entity\User
      label: 'User'
      list:
        fields: ['username', 'email']
        title: "Latest users registered on web site"
        sort: ['id', 'DESC']
      new:
        fields:
          - { property: 'username', type: 'text' }
          - { property: 'email', type: 'email' }

  user:
    display_name: true
    display_avatar: true
    # this method/property must return the string representation of the user
    # (Symfony will look for getFullName(), isFullName(), ..., and 'fullName' property)
    name_property_path: 'username'

    # this method/property must return the absolute URL of the user avatar image
    # (Symfony will look for getGravatar(), isGravatar(), ..., and 'gravatar' property)
    avatar_property_path: 'gravatar'

  design:
    brand_color: '#1ABC9C'
    assets:
      favicon: '/public/favicon.ico'
      # all kinds of assets are supported and linked accordingly
    menu:
      - { entity: 'User', icon: 'user' }
      - { entity: 'Category', icon: 'clipboard-list' }
      - { entity: 'Donation', icon: 'hand-holding-usd' }
      - { entity: 'Project', icon: 'pager' }
      - { entity: 'Status', icon: 'flag' }
      - { entity: 'Tag', icon: 'tag' }