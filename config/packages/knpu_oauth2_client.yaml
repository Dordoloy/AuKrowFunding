knpu_oauth2_client:
  clients:
    # configure your clients as described here: https://github.com/knpuniversity/oauth2-client-bundle#configuration
    # the key "facebook_main" can be anything, it
    # will create a service: "knpu.oauth2.client.facebook_main"
    facebook_main:
      # this will be one of the supported types
      type: facebook
      client_id: '%env(OAUTH_FACEBOOK_ID)%'
      client_secret: '%env(OAUTH_FACEBOOK_SECRET)%'
      # the route that you're redirected to after
      # see the controller example below
      redirect_route: connect_facebook_check
      redirect_params: {}
      graph_api_version: v2.12

    # will create service: "knpu.oauth2.client.apple"
    # an instance of: KnpU\OAuth2ClientBundle\Client\Provider\AppleClient
    apple:
      # must be "apple" - it activates that type!
      type: apple
      # add and set these environment variables in your .env files
      client_id: '%env(OAUTH_APPLE_CLIENT_ID)%'
      # a route name you'll create
      redirect_route: connect_apple_check
      redirect_params: {}
      team_id: null
      key_file_id: null
      key_file_path: null

    # will create service: "knpu.oauth2.client.google"
    # an instance of: KnpU\OAuth2ClientBundle\Client\Provider\GoogleClient
    google:
      # must be "google" - it activates that type!
      type: google
      # add and set these environment variables in your .env files
      client_id: '%env(OAUTH_GOOGLE_CLIENT_ID)%'
      client_secret: '%env(OAUTH_GOOGLE_CLIENT_SECRET)%'
      # a route name you'll create
      redirect_route: connect_google_check
      redirect_params: {}
      # Optional value for sending access_type parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#authenticationuriparameters
      # access_type: null
      # Optional value for sending hd parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#hd-param
      # hosted_domain: null
      # Optional value for additional fields to be requested from the user profile. If set, these values will be included with the defaults. More details: https://developers.google.com/+/web/api/rest/latest/people
      # user_fields: {}
      # Optional value if you don't want or need to enable Google+ API access.
      use_oidc_mode: false
      # whether to check OAuth2 "state": defaults to true
      use_state: true

    # will create service: "knpu.oauth2.client.instagram"
    # an instance of: KnpU\OAuth2ClientBundle\Client\Provider\InstagramClient
    instagram:
      # must be "instagram" - it activates that type!
      type: instagram
      # add and set these environment variables in your .env files
      client_id: '%env(OAUTH_INSTAGRAM_CLIENT_ID)%'
      client_secret: '%env(OAUTH_INSTAGRAM_CLIENT_SECRET)%'
      # a route name you'll create
      redirect_route: connect_instagram_check
      redirect_params: {}
      # whether to check OAuth2 "state": defaults to true
      # use_state: true

    # will create service: "knpu.oauth2.client.linkedin"
    # an instance of: KnpU\OAuth2ClientBundle\Client\Provider\LinkedInClient
    linkedin:
      # must be "linkedin" - it activates that type!
      type: linkedin
      # add and set these environment variables in your .env files
      client_id: '%env(OAUTH_LINKEDIN_CLIENT_ID)%'
      client_secret: '%env(OAUTH_LINKEDIN_CLIENT_SECRET)%'
      # a route name you'll create
      redirect_route: connect_linkedin_check
      redirect_params: {}
      # Optional value to specify fields to be requested from the profile. Since Linkedin's API upgrade from v1 to v2, fields and authorizations policy have been enforced. See https://docs.microsoft.com/en-us/linkedin/consumer/integrations/self-serve/sign-in-with-linkedin for more details.
      # fields: {}